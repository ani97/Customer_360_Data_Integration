{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "project3customer360data"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AzureSynapseAnalytics1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSynapseAnalytics1'"
		},
		"AzureSynapseAnalytics2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSynapseAnalytics2'"
		},
		"project3customer360data-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'project3customer360data-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:project3customer360data.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "project1bootcamp.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "project3"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aniket"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "project3customer360data-ondemand.sql.azuresynapse.net"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "customer360"
		},
		"AzureSynapseAnalytics1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aniket"
		},
		"AzureSynapseAnalytics2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "project3customer360data-ondemand.sql.azuresynapse.net"
		},
		"AzureSynapseAnalytics2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "customer360"
		},
		"AzureSynapseAnalytics2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aniket"
		},
		"project3customer360data-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsprojectwork.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/silver_to_sql')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Loop_over_folders",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json('[\n    {\"folder\": \"silver/Customers\", \"table\": \"Customers\"},\n    {\"folder\": \"silver/Products\", \"table\": \"Products\"},\n    {\"folder\": \"silver/Stores\", \"table\": \"Stores\"},\n    {\"folder\": \"silver/Agents\", \"table\": \"Agents\"},\n    {\"folder\": \"silver/LoyaltyAccounts\", \"table\": \"LoyaltyAccounts\"},\n    {\"folder\": \"silver/LoyaltyTransactions\", \"table\": \"LoyaltyTransactions\"},\n    {\"folder\": \"silver/OnlineTransactions\", \"table\": \"OnlineTransactions\"},\n    {\"folder\": \"silver/InStoreTransactions\", \"table\": \"InStoreTransactions\"},\n    {\"folder\": \"silver/CustomerServiceInteractions\", \"table\": \"CustomerServiceInteractions\"}\n]')\n",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy_parquet_to_sql",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@item().folder",
													"type": "Expression"
												},
												"wildcardFileName": "*.parquet",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "ParquetReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Parquet5",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().table",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-26T11:04:49Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Parquet5')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Metadata"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Metadata"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "project3customer360data-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "project3"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/project3customer360data-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "project3customer360data-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "project3"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/project3customer360data-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "project3customer360data-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "project3"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/project3customer360data-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet5')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "project3customer360data-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "project3"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/project3customer360data-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSynapseAnalytics1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseAnalytics1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalytics2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('AzureSynapseAnalytics2_properties_typeProperties_server')]",
					"database": "[parameters('AzureSynapseAnalytics2_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSynapseAnalytics2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseAnalytics2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/project3customer360data-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('project3customer360data-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/project3customer360data-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('project3customer360data-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Agents_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL TABLE agents\n(\n    AgentID int,\n    Name VARCHAR(100),\n    Department VARCHAR(100),\n    Shift VARCHAR(50)\n)\nWITH\n(\n    LOCATION='Agents.csv',\n    DATA_SOURCE=rawdatapath,\n    FILE_FORMAT=csvformat\n)\nGO;\n\n----------------------------------------------\n\nCREATE EXTERNAL TABLE dbo.silver_agents\nWITH (\n    LOCATION = 'Agents/',\n    DATA_SOURCE = silverpath,        \n    FILE_FORMAT = ParquetFormat      \n)\nAS\nSELECT AgentID,\n    ISNULL(Name, 'Unknown') AS Name,\n    ISNULL(Department, 'NA') AS Department,\n    ISNULL(Shift, 'NA') AS Shift\nFROM Agents\nWHERE AgentID IS NOT NULL;\n\n\nSelect * from dbo.silver_agents",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerServiceInteractions_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "drop external table CustomerServiceInteractions\n\nCREATE EXTERNAL TABLE CustomerServiceInteractions\n(\n    InteractionID int,\n    CustomerID int,\n    DateTime DATETIME2,\n    AgentID int,\n    IssueType varchar(100),\n    ResolutionStatus varchar(100)\n)\nWITH\n(\n    LOCATION='CustomerServiceInteractions.csv',\n    DATA_SOURCE=rawdatapath,\n    FILE_FORMAT=csvformat\n)\nGO;\n\n--------------------------------------------------------------\ndrop external table dbo.silver_customerserviceinteractions;\nCREATE EXTERNAL TABLE dbo.silver_customerserviceinteractions\nWITH (\n    LOCATION = 'CustomerServiceInteractions/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    InteractionID,\n    CustomerID,\n    ISNULL(CAST(DateTime AS DATETIME2), '1900-01-01') AS DateTime,  -- Fill with '1900-01-01'\n    AgentID,\n    ISNULL(IssueType, 'NA') AS IssueType,\n    ISNULL(ResolutionStatus, 'NA') AS ResolutionStatus\nFROM CustomerServiceInteractions\nWHERE InteractionID IS NOT NULL;\n\n\n\n\ndrop EXTERNAL table dbo.silver_customerserviceinteractions",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Customers_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL TABLE customers\n(\n    CustomerID int,\n    Name VARCHAR(100),\n    Email VARCHAR(100),\n    Address VARCHAR(200)\n\n)\nWITH\n(\n    LOCATION='Customers.csv',\n    DATA_SOURCE=rawdatapath,\n    FILE_FORMAT=csvformat\n)\nGO;\n\n------------------------------------------------------------\n\nCREATE EXTERNAL TABLE dbo.silver_customers\nWITH (\n    LOCATION = 'Customers/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    CustomerID,\n    ISNULL(Name, 'Unknown') AS Name,\n    ISNULL(Email, 'NA') AS Email,\n    ISNULL(Address, 'NA') AS Address\nFROM Customers\nWHERE CustomerID IS NOT NULL;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/InStoreTransactions_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nDROP EXTERNAL TABLE dbo.InStoreTransactions;\nGO\n\nCREATE EXTERNAL TABLE dbo.InStoreTransactions\n(\n    TransactionID INT,\n    CustomerID INT,\t\n    StoreID INT,\n    DateTime DATETIME2,\t \n    Amount FLOAT,\n    PaymentMethod VARCHAR(100)\n)\nWITH\n(\n    LOCATION = 'InStoreTransactions.csv',\n    DATA_SOURCE = rawdatapath,\n    FILE_FORMAT = csvformat\n);\nGO\n\n-------------------------------------------\n\nCREATE EXTERNAL TABLE dbo.silver_instoretransactions\nWITH (\n    LOCATION = 'InStoreTransactions/',  \n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    TransactionID,\n    CustomerID,\n    StoreID,\n    ISNULL(DateTime, '1900-01-01') AS DateTime,\n    ISNULL(Amount, 0) AS Amount,\n    ISNULL(PaymentMethod, 'NA') AS PaymentMethod\nFROM dbo.InStoreTransactions\nWHERE TransactionID IS NOT NULL;\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoyaltyAccounts_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL TABLE LoyaltyAccounts\n(\n    LoyaltyID INT,\n    CustomerID INT,\n    PointsEarned INT,\n    TierLevel VARCHAR(20),\n    JoinDate DATE\n)\nWITH\n(\n    LOCATION = 'LoyaltyAccounts.csv',   \n    DATA_SOURCE = rawdatapath,          \n    FILE_FORMAT = csvformat             \n);\nGO\n\n\n\n----------------------------\nCREATE EXTERNAL TABLE silver_loyaltyaccounts\nWITH (\n    LOCATION = 'LoyaltyAccounts/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    LoyaltyID,\n    CustomerID,\n    ISNULL(PointsEarned, 0) AS PointsEarned,\n    ISNULL(TierLevel, 'NA') AS TierLevel,\n    ISNULL(JoinDate, '1900-01-01') AS JoinDate\nFROM LoyaltyAccounts\nWHERE LoyaltyID IS NOT NULL;\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoyaltyTransactions_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP EXTERNAL TABLE LoyaltyTransactions;\nGO\n\nCREATE EXTERNAL TABLE LoyaltyTransactions\n(\n    LoyaltyID INT,\n    DateTime DATETIME2,\n    PointsChange INT,\n    Reason VARCHAR(100)\n)WITH\n(\n    LOCATION = 'LoyaltyTransactions.csv',\n    DATA_SOURCE = rawdatapath,\n    FILE_FORMAT = csvformat\n);\nGO\n\n--------------------------------------------\ndrop external table silver_loyaltytransactions\n\nCREATE EXTERNAL TABLE silver_loyaltytransactions\nWITH (\n    LOCATION = 'LoyaltyTransactions/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    LoyaltyID,\n    ISNULL(DateTime, '1900-01-01') AS DateTime,\n    ISNULL(PointsChange, 0) AS PointsChange,\n    ISNULL(Reason, 'NA') AS Reason\nFROM LoyaltyTransactions\nWHERE LoyaltyID IS NOT NULL;\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OnlineTransactions_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP EXTERNAL TABLE OnlineTransactions;\nGO\n\nCREATE EXTERNAL TABLE OnlineTransactions\n(\n    OrderID INT,\n    CustomerID INT,\n    ProductID INT,\n    DateTime DATETIME2,\n    PaymentMethod VARCHAR(100),\n    Amount FLOAT,\n    Status VARCHAR(50)\n)\nWITH\n(\n    LOCATION = 'OnlineTransactions.csv',\n    DATA_SOURCE = rawdatapath,\n    FILE_FORMAT = csvformat\n);\nGO\n\n----------------------------------------------\n\nCREATE EXTERNAL TABLE silver_onlinetransactions\nWITH (\n    LOCATION = 'OnlineTransactions/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    OrderID,\n    CustomerID,\n    ProductID,\n    ISNULL(DateTime, '1900-01-01') AS DateTime,\n    ISNULL(PaymentMethod, 'NA') AS PaymentMethod,\n    ISNULL(Amount, 0) AS Amount,\n    ISNULL(Status, 'NA') AS Status\nFROM OnlineTransactions\nWHERE OrderID IS NOT NULL;\nGO\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Products_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP EXTERNAL TABLE Products;\nGO\n\nCREATE EXTERNAL TABLE Products\n(\n    ProductID INT,\n    Name VARCHAR(100),\n    Category VARCHAR(100),\n    Price FLOAT\n)\nWITH\n(\n    LOCATION = 'Products.csv',\n    DATA_SOURCE = rawdatapath,\n    FILE_FORMAT = csvformat\n);\nGO\n\n-------------------------------------------------------\n\nCREATE EXTERNAL TABLE silver_products\nWITH (\n    LOCATION = 'Products/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    ProductID,\n    ISNULL(Name, 'Unknown') AS Name,\n    ISNULL(Category, 'NA') AS Category,\n    ISNULL(Price, 0) AS Price\nFROM Products\nWHERE ProductID IS NOT NULL;\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Stores_csv')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP EXTERNAL TABLE Stores;\nGO\n\nCREATE EXTERNAL TABLE Stores\n(\n    StoreID INT,\n    Location VARCHAR(200),\n    Manager VARCHAR(100),\n    OpenHours VARCHAR(100)\n)\nWITH\n(\n    LOCATION = 'Stores.csv',\n    DATA_SOURCE = rawdatapath,\n    FILE_FORMAT = csvformat\n);\nGO\n\n-------------------------------------\n\nCREATE EXTERNAL TABLE silver_stores\nWITH (\n    LOCATION = 'Stores/',\n    DATA_SOURCE = silverpath,\n    FILE_FORMAT = ParquetFormat\n)\nAS\nSELECT \n    StoreID,\n    ISNULL(Location, 'NA') AS Location,\n    ISNULL(Manager, 'NA') AS Manager,\n    ISNULL(OpenHours, 'NA') AS OpenHours\nFROM Stores\nWHERE StoreID IS NOT NULL;\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/data_source_file_format')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE rawdatapath\nWITH\n(\n    LOCATION='https://adlsprojectwork.dfs.core.windows.net/project3/bronze/'\n);\n\nCREATE EXTERNAL FILE FORMAT csvformat\nWITH(\n    FORMAT_TYPE=DELIMITEDTEXT,\n    FORMAT_OPTIONS(\n        FIELD_TERMINATOR=',',\n        STRING_DELIMITER='\"',\n        FIRST_ROW=2,\n        ENCODING='UTF8',\n        PARSER_VERSION='2.0'\n    )\n);\n\nCREATE EXTERNAL DATA SOURCE silverpath\nWITH\n(\n    LOCATION='https://adlsprojectwork.dfs.core.windows.net/project3/silver/'\n);\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat\nWITH (\n    FORMAT_TYPE = PARQUET\n);",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "customer360",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}